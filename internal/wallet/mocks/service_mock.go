// Code generated by MockGen. DO NOT EDIT.
// Source: service.go

// Package mock_wallet is a generated GoMock package.
package mock_wallet

import (
	context "context"
	wallet "nn-blockchain-api/internal/wallet"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockService is a mock of Service interface.
type MockService struct {
	ctrl     *gomock.Controller
	recorder *MockServiceMockRecorder
}

// MockServiceMockRecorder is the mock recorder for MockService.
type MockServiceMockRecorder struct {
	mock *MockService
}

// NewMockService creates a new mock instance.
func NewMockService(ctrl *gomock.Controller) *MockService {
	mock := &MockService{ctrl: ctrl}
	mock.recorder = &MockServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockService) EXPECT() *MockServiceMockRecorder {
	return m.recorder
}

// CreateMnemonic mocks base method.
func (m *MockService) CreateMnemonic(ctx context.Context, length, language string) (*wallet.Mnemonic, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateMnemonic", ctx, length, language)
	ret0, _ := ret[0].(*wallet.Mnemonic)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateMnemonic indicates an expected call of CreateMnemonic.
func (mr *MockServiceMockRecorder) CreateMnemonic(ctx, length, language interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateMnemonic", reflect.TypeOf((*MockService)(nil).CreateMnemonic), ctx, length, language)
}

// CreateWallet mocks base method.
func (m *MockService) CreateWallet(ctx context.Context, walletName string, mnemonic *string) (*wallet.Wallet, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateWallet", ctx, walletName, mnemonic)
	ret0, _ := ret[0].(*wallet.Wallet)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateWallet indicates an expected call of CreateWallet.
func (mr *MockServiceMockRecorder) CreateWallet(ctx, walletName, mnemonic interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateWallet", reflect.TypeOf((*MockService)(nil).CreateWallet), ctx, walletName, mnemonic)
}
