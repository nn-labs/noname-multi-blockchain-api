// Code generated by MockGen. DO NOT EDIT.
// Source: client.go

// Package bitcoin is a generated GoMock package.
package bitcoin

import (
	bytes "bytes"
	io "io"
	http "net/http"
	bitcoin "nn-blockchain-api/pkg/rpc/bitcoin"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIBtcClient is a mock of IBtcClient interface.
type MockIBtcClient struct {
	ctrl     *gomock.Controller
	recorder *MockIBtcClientMockRecorder
}

// MockIBtcClientMockRecorder is the mock recorder for MockIBtcClient.
type MockIBtcClientMockRecorder struct {
	mock *MockIBtcClient
}

// NewMockIBtcClient creates a new mock instance.
func NewMockIBtcClient(ctrl *gomock.Controller) *MockIBtcClient {
	mock := &MockIBtcClient{ctrl: ctrl}
	mock.recorder = &MockIBtcClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIBtcClient) EXPECT() *MockIBtcClientMockRecorder {
	return m.recorder
}

// EncodeBaseRequest mocks base method.
func (m *MockIBtcClient) EncodeBaseRequest(request bitcoin.BaseRequest) (*bytes.Buffer, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EncodeBaseRequest", request)
	ret0, _ := ret[0].(*bytes.Buffer)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// EncodeBaseRequest indicates an expected call of EncodeBaseRequest.
func (mr *MockIBtcClientMockRecorder) EncodeBaseRequest(request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EncodeBaseRequest", reflect.TypeOf((*MockIBtcClient)(nil).EncodeBaseRequest), request)
}

// Send mocks base method.
func (m *MockIBtcClient) Send(body io.Reader) (*http.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Send", body)
	ret0, _ := ret[0].(*http.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Send indicates an expected call of Send.
func (mr *MockIBtcClientMockRecorder) Send(body interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Send", reflect.TypeOf((*MockIBtcClient)(nil).Send), body)
}
